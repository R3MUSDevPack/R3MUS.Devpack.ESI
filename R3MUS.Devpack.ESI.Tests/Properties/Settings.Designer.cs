//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace R3MUS.Devpack.ESI.Tests.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.1.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("98356193")]
        public long CorporationId {
            get {
                return ((long)(this["CorporationId"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("96843266")]
        public long MailOriginatorId {
            get {
                return ((long)(this["MailOriginatorId"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("93902200")]
        public long MailRecipientId {
            get {
                return ((long)(this["MailRecipientId"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3v8aNWojwkHT1Wl7-RTOIAuyW2lJS2M4Ptij3u4EPBk1")]
        public string RefreshToken {
            get {
                return ((string)(this["RefreshToken"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<font size=\"24\" color=\"#ff00ff00\">Greetings!</font><br>\r\n<font size=\"14\" color=\"#" +
            "ff00ffff\">On behalf of White Fang Militia I would like to extend an invitation t" +
            "o join our happy band of reprobates.</font><br>\r\n<font size=\"14\" color=\"#ffff00f" +
            "f\">We are a newbie-friendly, Faction Warfare corporation dedicated to training o" +
            "ur members in the noble art of PvP combat with a wealth of training experience b" +
            "ehind us. Our buyback system means that our members can make a good rate of isk " +
            "by shooting war targets, capturing war complexes and contested systems. From the" +
            "se FW activities we earn faction loyalty points which are used to buy certain it" +
            "ems cheaply and sell them at an ISK profit.<br>\r\n<b>In addition to this, we have" +
            " shared access to a wormhole PI farm which allows our members to make even more " +
            "ISK for a little setup and again sell it. Between these income streams we can pa" +
            "y for game-time, buy shiny spaceships &amp; blow even more up (normally on alcoh" +
            "ol fuelled fleets).</b><br></font>\r\n<font size=\"14\" color=\"#ff00ffff\"><i>What do" +
            " we ask in return? Just that everyone looks after each other, a good attitude on" +
            " our Teamspeak and Slack is displayed and that fun is had. That\'s all: no API ch" +
            "ecks for joining, no interviews, no BS (unless I\'m drunk again).</i></font><br>\r" +
            "\n<font size=\"14\" color=\"#ffffff00\">If this sounds like your thing, we look forwa" +
            "rd to your application. If not, I hope that we find ourselves facing off in true" +
            " Eve-style: gloriously exploding into tiny pieces.</font><br>\r\n<font size=\"14\" c" +
            "olor=\"#ffff0000\">Public Channel: </font><font size=\"14\" color=\"#fff7931e\"><a hre" +
            "f=\"joinChannel:-85835165//None//None\">White Fang Militia Public</a></font>\r\n<fon" +
            "t size=\"14\" color=\"#ffff0000\"> <br>Corp Link: </font><font size=\"14\" color=\"#fff" +
            "7931e\"><a href=\"recruitmentAd:98518643//131987\">White Fang Militia</a><br></font" +
            ">\r\n<font size=\"18\" color=\"#ff00ff00\">o7<br>White Fang Recruitment</font>")]
        public string MailText {
            get {
                return ((string)(this["MailText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White Fang Militia Needs You!")]
        public string MailHeader {
            get {
                return ((string)(this["MailHeader"]));
            }
        }
    }
}
